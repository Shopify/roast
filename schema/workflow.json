{
    "type": "object",
    "required": ["name", "tools", "steps"],
    "properties": {
      "name": {
        "type": "string"
      },
      "tools": {
        "type": "array",
        "items": {
          "type": "string"
        }
      },
      "target": {
        "type": "string",
        "description": "Optional target file, glob pattern, or shell command for the workflow to operate on"
      },
      "api_token": {
        "type": "string",
        "description": "Shell command to fetch an API token dynamically, e.g. $(cat ~/.my-token)"
      },
      "model": {
        "type": "string",
        "description": "Default AI model to use for all steps in the workflow"
      },
      "inputs": {
        "type": "array",
        "items": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "minProperties": 1,
              "maxProperties": 1
            }
          ]
        }
      },
      "steps": {
        "type": "array",
        "items": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "array",
              "items": {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "object",
                    "properties": {
                      "steps": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "required": ["steps"]
                  }
                ]
              }
            },
            {
              "type": "object",
              "properties": {
                "proceed?": {
                  "type": "object",
                  "properties": {
                    "true": {
                      "$ref": "#/properties/steps"
                    },
                    "false": {
                      "$ref": "#/properties/steps"
                    }
                  },
                  "required": ["true", "false"]
                }
              },
              "required": ["proceed?"]
            },
            {
              "type": "object",
              "properties": {
                "repeat": {
                  "type": "object",
                  "properties": {
                    "steps": {
                      "type": "array",
                      "items": {
                        "$ref": "#/properties/steps/items"
                      }
                    },
                    "until": {
                      "type": "string",
                      "description": "Condition to evaluate after each iteration; loop stops when condition becomes true. Can be a Ruby expression in {{...}}, a bash command in $(...), a step name, or prompt content. Result will be coerced to boolean."
                    },
                    "max_iterations": {
                      "type": "integer",
                      "description": "Maximum number of iterations to prevent infinite loops",
                      "minimum": 1
                    }
                  },
                  "required": ["steps", "until"]
                }
              },
              "required": ["repeat"]
            },
            {
              "type": "object",
              "properties": {
                "each": {
                  "type": "string",
                  "description": "Input that resolves to a collection to iterate over. Can be a Ruby expression in {{...}}, a bash command in $(...), a step name, or prompt content. Result will be coerced to an iterable collection."
                },
                "as": {
                  "type": "string",
                  "description": "Variable name to assign each item during iteration"
                },
                "steps": {
                  "type": "array",
                  "items": {
                    "$ref": "#/properties/steps/items"
                  }
                }
              },
              "required": ["each", "as", "steps"]
            },
            {
              "type": "object",
              "properties": {
                "if": {
                  "type": "string",
                  "description": "Condition to evaluate. Can be a Ruby expression in {{...}}, a bash command in $(...), a step name, or prompt content. Result will be coerced to boolean."
                },
                "then": {
                  "type": "array",
                  "items": {
                    "$ref": "#/properties/steps/items"
                  }
                },
                "else": {
                  "type": "array",
                  "items": {
                    "$ref": "#/properties/steps/items"
                  }
                }
              },
              "required": ["if", "then"]
            },
            {
              "type": "object",
              "properties": {
                "unless": {
                  "type": "string",
                  "description": "Condition to evaluate (inverted). Can be a Ruby expression in {{...}}, a bash command in $(...), a step name, or prompt content. Result will be coerced to boolean."
                },
                "then": {
                  "type": "array",
                  "items": {
                    "$ref": "#/properties/steps/items"
                  }
                }
              },
              "required": ["unless", "then"]
            }
          ]
        }
      },
      "proceed?": {
        "type": "object",
        "properties": {
          "label": {
            "type": "string"
          }
        },
        "required": ["label"]
      }
    }
  }