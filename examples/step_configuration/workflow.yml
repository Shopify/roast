name: Step Configuration Example
description: Demonstrates how to configure various step types including inline prompts, iterators, and regular steps

# Global configuration that applies to all steps
model: openai/gpt-4o-mini
loop: true

# Configuration for specific steps
summarize the code:
  model: claude-3-opus  # Override global model
  loop: false          # Disable auto-loop for this step
  print_response: true # Print the response
  json: false          # Don't expect JSON response
  params:
    temperature: 0.7   # Custom temperature

analyze complexity:
  model: gpt-4o
  json: true           # Expect JSON response
  params:
    temperature: 0.2   # Lower temperature for more consistent analysis

# Iterator step configuration
each:
  each: "{{files}}"
  as: file
  model: gpt-3.5-turbo # Use a faster model for iteration
  loop: false          # Don't loop on each iteration
  steps:
    - process {{file}}

repeat:
  repeat: true
  until: "are all tests passing"  # This will be evaluated as a step
  max_iterations: 5
  model: gpt-4o
  print_response: true
  coerce_to: llm_boolean  # Interpret natural language response as boolean
  steps:
    - run tests
    - fix failing tests

# Step used in boolean context
are all tests passing:
  model: gpt-4o
  coerce_to: llm_boolean  # Convert "Yes, all tests are passing!" to true
  params:
    temperature: 0.2

# Steps can mix configured and unconfigured inline prompts
steps:
  - list all source files           # Uses global configuration
  - summarize the code              # Uses step-specific configuration
  - analyze complexity              # Uses step-specific configuration
  - suggest improvements:           # Step-specific configuration inline
      model: claude-3-opus
      params:
        temperature: 0.9
  - each                           # Iterator with configuration
  - repeat                         # Iterator with configuration