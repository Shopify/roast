name: Context Management Demo
model: gpt-4o-mini
tools:
  - Roast::Tools::ReadFile
  - Roast::Tools::WriteFile

# Context management configuration
context_management:
  enabled: true
  strategy: auto
  threshold: 0.8  # Trigger compaction at 80% of context window
  max_tokens: 5000  # Demo with smaller limit for testing
  retain_steps:
    - analyze_requirements
    - generate_summary

steps:
  - analyze_requirements: |
      Analyze this text and list the key requirements:
      
      We need a system that can:
      1. Process customer orders
      2. Track inventory levels
      3. Generate reports
      4. Handle refunds
      5. Integrate with payment systems
      
  - expand_details: |
      For each requirement from the previous step, provide detailed implementation notes,
      technical considerations, and potential challenges. Be very thorough and verbose
      to help test the context management system.
      
  - generate_more_context: |
      Now describe the database schema needed for this system. Include all tables,
      relationships, indexes, and data types. Be extremely detailed.
      
  - add_api_design: |
      Design a complete REST API for this system. Include all endpoints, request/response
      formats, authentication, and error handling. Provide examples for each endpoint.
      
  - generate_summary: |
      Create a concise executive summary of the system design. Focus on the key decisions
      and trade-offs made during the design process.