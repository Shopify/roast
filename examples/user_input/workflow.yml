name: interactive_deployment
description: Interactive deployment workflow with user confirmations
model: gpt-4o

steps:
  # Collect deployment information
  - input:
      prompt: "Which environment do you want to deploy to?"
      name: environment
      type: choice
      options:
        - development
        - staging
        - production
      required: true
  
  - input:
      prompt: "Enter the deployment tag/version:"
      name: deploy_tag
      required: true
      default: "latest"
  
  # Show deployment plan
  - bash:
      command: |
        echo "==================================="
        echo "       DEPLOYMENT PLAN"
        echo "==================================="
        echo "Environment: {{workflow.output.environment}}"
        echo "Version: {{workflow.output.deploy_tag}}"
        echo "Timestamp: {{Date.today}}"
        echo "==================================="
  
  # Confirm deployment
  - input:
      prompt: "Deploy {{workflow.output.deploy_tag}} to {{workflow.output.environment}}?"
      type: boolean
      default: false
      name: confirm_deploy
  
  # Execute deployment if confirmed
  - if: "{{workflow.output.confirm_deploy}}"
    then:
      - bash:
          command: echo "üöÄ Starting deployment to {{workflow.output.environment}}..."
      
      # Simulate deployment steps
      - bash:
          command: |
            echo "üöÄ Deploying version {{workflow.output.deploy_tag}} to {{workflow.output.environment}}"
            echo "üì¶ Pulling Docker image: myapp:{{workflow.output.deploy_tag}}"
            sleep 2
            echo "üîÑ Rolling out to {{workflow.output.environment}} cluster"
            sleep 2
            echo "‚úÖ Deployment completed successfully!"
      
      # Post-deployment verification
      - input:
          prompt: "Run smoke tests?"
          type: boolean
          default: true
          name: run_tests
      
      - if: "{{workflow.output.run_tests}}"
        then:
          - bash:
              command: |
                echo "üß™ Running smoke tests..."
                sleep 1
                echo "‚úÖ All tests passed!"
    else:
      - bash:
          command: echo "‚ùå Deployment cancelled by user."